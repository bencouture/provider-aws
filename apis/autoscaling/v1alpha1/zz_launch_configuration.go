/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

// LaunchConfigurationParameters defines the desired state of LaunchConfiguration
type LaunchConfigurationParameters struct {
	// Region is which region the LaunchConfiguration will be created.
	// +kubebuilder:validation:Required
	Region string `json:"region"`
	// For Auto Scaling groups that are running in a virtual private cloud (VPC),
	// specifies whether to assign a public IP address to the group's instances.
	// If you specify true, each instance in the Auto Scaling group receives a unique
	// public IP address. For more information, see Launching Auto Scaling instances
	// in a VPC (https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html)
	// in the Amazon EC2 Auto Scaling User Guide.
	//
	// If you specify this parameter, you must specify at least one subnet for VPCZoneIdentifier
	// when you create your group.
	//
	// If the instance is launched into a default subnet, the default is to assign
	// a public IP address, unless you disabled the option to assign a public IP
	// address on the subnet. If the instance is launched into a nondefault subnet,
	// the default is not to assign a public IP address, unless you enabled the
	// option to assign a public IP address on the subnet.
	AssociatePublicIPAddress *bool `json:"associatePublicIPAddress,omitempty"`
	// A block device mapping, which specifies the block devices for the instance.
	// You can specify virtual devices and EBS volumes. For more information, see
	// Block Device Mapping (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html)
	// in the Amazon EC2 User Guide for Linux Instances.
	BlockDeviceMappings []*BlockDeviceMapping `json:"blockDeviceMappings,omitempty"`
	// The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to.
	// For more information, see ClassicLink (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html)
	// in the Amazon EC2 User Guide for Linux Instances and Linking EC2-Classic
	// instances to a VPC (https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink)
	// in the Amazon EC2 Auto Scaling User Guide.
	//
	// This parameter can only be used if you are launching EC2-Classic instances.
	ClassicLinkVPCID *string `json:"classicLinkVPCID,omitempty"`
	// The IDs of one or more security groups for the specified ClassicLink-enabled
	// VPC. For more information, see ClassicLink (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html)
	// in the Amazon EC2 User Guide for Linux Instances and Linking EC2-Classic
	// instances to a VPC (https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-ClassicLink)
	// in the Amazon EC2 Auto Scaling User Guide.
	//
	// If you specify the ClassicLinkVPCId parameter, you must specify this parameter.
	ClassicLinkVPCSecurityGroups []*string `json:"classicLinkVPCSecurityGroups,omitempty"`
	// Specifies whether the launch configuration is optimized for EBS I/O (true)
	// or not (false). The optimization provides dedicated throughput to Amazon
	// EBS and an optimized configuration stack to provide optimal I/O performance.
	// This optimization is not available with all instance types. Additional fees
	// are incurred when you enable EBS optimization for an instance type that is
	// not EBS-optimized by default. For more information, see Amazon EBS-Optimized
	// Instances (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html)
	// in the Amazon EC2 User Guide for Linux Instances.
	//
	// The default value is false.
	EBSOptimized *bool `json:"ebsOptimized,omitempty"`
	// The name or the Amazon Resource Name (ARN) of the instance profile associated
	// with the IAM role for the instance. The instance profile contains the IAM
	// role.
	//
	// For more information, see IAM role for applications that run on Amazon EC2
	// instances (https://docs.aws.amazon.com/autoscaling/ec2/userguide/us-iam-role.html)
	// in the Amazon EC2 Auto Scaling User Guide.
	IAMInstanceProfile *string `json:"iamInstanceProfile,omitempty"`
	// The ID of the Amazon Machine Image (AMI) that was assigned during registration.
	// For more information, see Finding an AMI (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html)
	// in the Amazon EC2 User Guide for Linux Instances.
	//
	// If you do not specify InstanceId, you must specify ImageId.
	ImageID *string `json:"imageID,omitempty"`
	// The ID of the instance to use to create the launch configuration. The new
	// launch configuration derives attributes from the instance, except for the
	// block device mapping.
	//
	// To create a launch configuration with a block device mapping or override
	// any other instance attributes, specify them as part of the same request.
	//
	// For more information, see Creating a launch configuration using an EC2 instance
	// (https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-lc-with-instanceID.html)
	// in the Amazon EC2 Auto Scaling User Guide.
	//
	// If you do not specify InstanceId, you must specify both ImageId and InstanceType.
	InstanceID *string `json:"instanceID,omitempty"`
	// Controls whether instances in this group are launched with detailed (true)
	// or basic (false) monitoring.
	//
	// The default value is true (enabled).
	//
	// When detailed monitoring is enabled, Amazon CloudWatch generates metrics
	// every minute and your account is charged a fee. When you disable detailed
	// monitoring, CloudWatch generates metrics every 5 minutes. For more information,
	// see Configure Monitoring for Auto Scaling Instances (https://docs.aws.amazon.com/autoscaling/latest/userguide/enable-as-instance-metrics.html)
	// in the Amazon EC2 Auto Scaling User Guide.
	InstanceMonitoring *InstanceMonitoring `json:"instanceMonitoring,omitempty"`
	// Specifies the instance type of the EC2 instance.
	//
	// For information about available instance types, see Available Instance Types
	// (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes)
	// in the Amazon EC2 User Guide for Linux Instances.
	//
	// If you do not specify InstanceId, you must specify InstanceType.
	InstanceType *string `json:"instanceType,omitempty"`
	// The ID of the kernel associated with the AMI.
	KernelID *string `json:"kernelID,omitempty"`
	// The name of the key pair. For more information, see Amazon EC2 Key Pairs
	// (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html)
	// in the Amazon EC2 User Guide for Linux Instances.
	KeyName *string `json:"keyName,omitempty"`
	// The name of the launch configuration. This name must be unique per Region
	// per account.
	// +kubebuilder:validation:Required
	LaunchConfigurationName *string `json:"launchConfigurationName"`
	// The metadata options for the instances. For more information, see Configuring
	// the Instance Metadata Options (https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-config.html#launch-configurations-imds)
	// in the Amazon EC2 Auto Scaling User Guide.
	MetadataOptions *InstanceMetadataOptions `json:"metadataOptions,omitempty"`
	// The tenancy of the instance. An instance with dedicated tenancy runs on isolated,
	// single-tenant hardware and can only be launched into a VPC.
	//
	// To launch dedicated instances into a shared tenancy VPC (a VPC with the instance
	// placement tenancy attribute set to default), you must set the value of this
	// parameter to dedicated.
	//
	// If you specify PlacementTenancy, you must specify at least one subnet for
	// VPCZoneIdentifier when you create your group.
	//
	// For more information, see Configuring instance tenancy with Amazon EC2 Auto
	// Scaling (https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-dedicated-instances.html)
	// in the Amazon EC2 Auto Scaling User Guide.
	//
	// Valid Values: default | dedicated
	PlacementTenancy *string `json:"placementTenancy,omitempty"`
	// The ID of the RAM disk to select.
	RamdiskID *string `json:"ramdiskID,omitempty"`
	// A list that contains the security groups to assign to the instances in the
	// Auto Scaling group.
	//
	// [EC2-VPC] Specify the security group IDs. For more information, see Security
	// Groups for Your VPC (https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html)
	// in the Amazon Virtual Private Cloud User Guide.
	//
	// [EC2-Classic] Specify either the security group names or the security group
	// IDs. For more information, see Amazon EC2 Security Groups (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html)
	// in the Amazon EC2 User Guide for Linux Instances.
	SecurityGroups []*string `json:"securityGroups,omitempty"`
	// The maximum hourly price to be paid for any Spot Instance launched to fulfill
	// the request. Spot Instances are launched when the price you specify exceeds
	// the current Spot price. For more information, see Requesting Spot Instances
	// (https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-launch-spot-instances.html)
	// in the Amazon EC2 Auto Scaling User Guide.
	//
	// When you change your maximum price by creating a new launch configuration,
	// running instances will continue to run as long as the maximum price for those
	// running instances is higher than the current Spot price.
	SpotPrice *string `json:"spotPrice,omitempty"`
	// The user data to make available to the launched EC2 instances. For more information,
	// see Instance metadata and user data (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html)
	// (Linux) and Instance metadata and user data (https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html)
	// (Windows). If you are using a command line tool, base64-encoding is performed
	// for you, and you can load the text from a file. Otherwise, you must provide
	// base64-encoded text. User data is limited to 16 KB.
	UserData                            *string `json:"userData,omitempty"`
	CustomLaunchConfigurationParameters `json:",inline"`
}

// LaunchConfigurationSpec defines the desired state of LaunchConfiguration
type LaunchConfigurationSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       LaunchConfigurationParameters `json:"forProvider"`
}

// LaunchConfigurationObservation defines the observed state of LaunchConfiguration
type LaunchConfigurationObservation struct {
}

// LaunchConfigurationStatus defines the observed state of LaunchConfiguration.
type LaunchConfigurationStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          LaunchConfigurationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// LaunchConfiguration is the Schema for the LaunchConfigurations API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type LaunchConfiguration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LaunchConfigurationSpec   `json:"spec"`
	Status            LaunchConfigurationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LaunchConfigurationList contains a list of LaunchConfigurations
type LaunchConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LaunchConfiguration `json:"items"`
}

// Repository type metadata.
var (
	LaunchConfigurationKind             = "LaunchConfiguration"
	LaunchConfigurationGroupKind        = schema.GroupKind{Group: CRDGroup, Kind: LaunchConfigurationKind}.String()
	LaunchConfigurationKindAPIVersion   = LaunchConfigurationKind + "." + GroupVersion.String()
	LaunchConfigurationGroupVersionKind = GroupVersion.WithKind(LaunchConfigurationKind)
)

func init() {
	SchemeBuilder.Register(&LaunchConfiguration{}, &LaunchConfigurationList{})
}
